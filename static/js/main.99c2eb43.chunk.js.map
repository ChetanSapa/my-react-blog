{"version":3,"sources":["redux/dialogsReducer.js","utils/validation/object-helper.js","redux/usersReducer.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","api/api.js","components/common/FormControls/FormControls.js","components/Navbar/Navbar.module.css","serviceWorker.js","redux/profileReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/Profileinfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/Myposts.jsx","components/Profile/MyPosts/MypostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","utils/validation/validators.js","components/common/FormControls/FormControls.module.css","img/Spinner-5.gif","components/common/Preloader/Preloader.js","components/Profile/MyPosts/Myposts.module.css","components/Header/Header.module.css"],"names":["ADD_MESSAGE","initialState","dialogData","id","name","ava","messages","message","addMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","updateObjInArr","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unFollowSuccess","setCurrentPage","setIsFetching","setProgress","requestUsers","page","dispatch","a","usersAPI","getUsers","data","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow","userReducer","followed","filter","module","exports","instance","axios","create","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","FormControl","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","input","restProps","child","Input","createField","placeholder","validate","component","text","Boolean","window","location","hostname","match","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","setStatus","profileReducer","newPost","newPostBody","newPostText","p","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","s","nav","item","to","activeClassName","active","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","onBlur","onChange","e","currentTarget","value","autoFocus","ProfileInfo","src","descr","photos","large","alt","fullName","lookingForAJobDescription","Preloader","Post","MyPosts","memo","log","postElements","myPostsDesc","AddPostFormRedux","onSubmit","values","addPost","maxLength10","maxLengthCreator","reduxForm","handleSubmit","Field","required","MyPostsContainer","connect","addPostActionCreator","Profile","ProfileContainer","this","params","authorisedUserId","history","push","getUserProfile","withRouter","Header","header","loginBlock","onClick","HeaderContainer","LoginReduxForm","style","textAlign","formSummaryError","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","UsersContainer","App","initializeApp","path","render","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","maxLength","spiner"],"mappings":"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","file":"static/js/main.99c2eb43.chunk.js","sourcesContent":["const ADD_MESSAGE = \"dialogs/ADD-MESSAGE\";\r\n\r\nlet initialState = {\r\n    dialogData: [\r\n        {id: 1, name: \"Matthew\", ava: \"https://pbs.twimg.com/media/C5TmS81W8AET_95.jpg\"},\r\n        {id: 2, name: \"John\", ava: \"https://pbs.twimg.com/profile_images/835090891018809348/Vkhzemz2_400x400.jpg\"},\r\n        {id: 3, name: \"Mario\", ava: \"https://i1.sndcdn.com/avatars-000357444641-8lru4y-t500x500.jpg\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi!\"},\r\n        {id: 2, message: \"How are you, man?\"},\r\n        {id: 3, message: \"I'm fine! And How are you?)\"},\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let body = action.newMessageBody\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageCreator = (newMessageBody) => ({type: ADD_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","export const updateObjInArr = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjInArr} from \"../utils/validation/object-helper\";\r\n\r\nconst FOLLOW = \"users/FOLLOW\";\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE'\r\nconst SET_TOTAL_COUNT = 'users/SET_TOTAL_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArr(state.users, action.userId, 'id', {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true};\r\n                //     }\r\n                //     return u\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjInArr(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_COUNT: {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unFollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount})\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const setProgress = (followingInProgress, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n            dispatch(setIsFetching(false))\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\r\n        dispatch(setProgress(true, userId))\r\n        let response = await apiMethod(userId)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(actionCreator(userId))\r\n        }\r\n        dispatch(setProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(userId, dispatch, usersAPI.unfollow.bind(usersAPI), unFollowSuccess)\r\n    }\r\n}\r\nexport default userReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descr\":\"ProfileInfo_descr__3JU_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2kphO\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '8dddc296-fc0d-42d5-9d28-b2eef5446365'}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage, pageSize = 4) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`, {\r\n            withCredentials: true\r\n        }).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    follow (userId)  {\r\n        return instance.post(`follow?${userId}`, {}, {\r\n        })\r\n    },\r\n    unfollow (userId) {\r\n        return instance.delete(`follow?${userId}`,  {\r\n        })\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI obj')\r\n        return profileAPI.getProfile(userId)\r\n\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}\r\n// export const getUsers = (currentPage, pageSize = 4) => {\r\n//     return instance.get(`users?page=${currentPage}&count=${pageSize}`, {\r\n//         withCredentials: true\r\n//     }).then(response => {\r\n//         return response.data\r\n//     })\r\n// }\r\n\r\n// export const followUser = (id) => {\r\n//     return instance.post(`follow?${id}`, {}, {\r\n//         withCredentials: true,\r\n//         headers: {\r\n//             'API-KEY': '8dddc296-fc0d-42d5-9d28-b2eef5446365'}\r\n//     })\r\n// }\r\n\r\n// export const unfollowUser = (id) => {\r\n//     return instance.delete(`follow?${id}`,  {\r\n//         withCredentials: true,\r\n//         headers: {\r\n//             'API-KEY': '8dddc296-fc0d-42d5-9d28-b2eef5446365'}\r\n//     })\r\n// }\r\n","import React from \"react\";\r\nimport styles from '../../common/FormControls/FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = error && touched\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => <div>\r\n    <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        component={component}\r\n        validate={validate}\r\n        {...props}\r\n    /> {text}\r\n</div>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__pA07c\",\"item\":\"Navbar_item__3JM9i\",\"active\":\"Navbar_active__bYtCM\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = \"profile/ADD-POST\";\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst DELETE_POST = 'profile/DELETE_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi! How are you?\", likesCount: \"like 10\"},\r\n        {id: 2, message: \"It's my first post\", likesCount: \"like 25\"},\r\n    ],\r\n    profile: null,\r\n    status: ' ',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.id)\r\n            }\r\n        case SET_STATUS :\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = (newPostBody) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostBody\r\n    }\r\n}\r\nexport const deletePostActionCreator = (id) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        id\r\n    }\r\n}\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status: status\r\n})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0)\r\n        dispatch(setStatus(status))\r\n}\r\n\r\n\r\nexport default profileReducer;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = \"auth/SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    email: null,\r\n    userId: null,\r\n    login: null,\r\n    isAuth: false,\r\n    isFetching: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (email, userId, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {email, userId, login, isAuth}\r\n})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {email, id, login} = response.data.data\r\n        dispatch(setAuthUserData(email, id, login, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, true))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = \"app/INITIALIZED_SUCCESS\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS,\r\n})\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    //dispatch(something())\r\n    //dispatch(something())\r\n    // Promise.all([promise])\r\n    promise.then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport userReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: userReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Profile'} activeClassName={s.active}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Dialogs'} activeClassName={s.active}>Dialogs</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'/Users'}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'#'}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to={'#'}>Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    // activateEditMode = () => {\r\n    //     this.setState({\r\n    //         editMode: true\r\n    //     })\r\n    // }\r\n    // deActivateEditMode = () => {\r\n    //     this.setState({\r\n    //         editMode: false\r\n    //     })\r\n    //     this.props.updateStatus(this.state.status)\r\n    // }\r\n    // onStatusChange = (e) => {\r\n    //     this.setState({\r\n    //         status: e.currentTarget.value\r\n    //     })\r\n    // }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {!this.state.editMode &&\r\n            <div>\r\n                <span onDoubleClick={this.activateEditMode}>{this.props.status || 'add status'}</span>\r\n            </div>\r\n            }\r\n            {this.state.editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={this.onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={this.deActivateEditMode}\r\n                    value={this.state.status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div>\r\n        {!editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || 'add status'}</span>\r\n        </div>\r\n        }\r\n        {editMode &&\r\n        <div>\r\n            <input\r\n                onBlur={deActivateEditMode}\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                value={status}\r\n            />\r\n        </div>\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus,}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <img\r\n                src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n        </div>\r\n        <div className={s.descr}>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <img src={profile.photos.large} alt=\"\"/><br/>\r\n            <span>Your name is? {profile.fullName}</span><br/>\r\n            <span>Wat you looking for? {profile.lookingForAJobDescription}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://whatsism.com/uploads/posts/2018-07/1530546770_rmk_vdjbx10.jpg' alt=\"\"/>\r\n            <div>{props.message}</div>\r\n            <span>{props.likesCount}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './Myposts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\r\nimport {Textarea} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log('Render')\r\n    let postElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.myPostsDesc}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n//create Form with redux-form\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newPostBody'\r\n                    placeholder='Enter your message'\r\n                    validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div><button>Send message</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'AddMessageForm'})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./Myposts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/Profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MypostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //     let userId = this.props.match.params.userId\r\n        //     if (!userId) {\r\n        //         userId = this.props.authorisedUserId\r\n        //         if(!userId) {\r\n        //             this.props.history.push('/login')\r\n        //         }\r\n        //     }\r\n        //     this.props.getUserProfile(userId)\r\n        //     this.props.getStatus(userId)\r\n        // }\r\n\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            this.props.isAuth\r\n                ? userId = (this.props.authorisedUserId)\r\n                : this.props.history.push(\"/login\")\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormControls/FormControls\";\r\nimport {required} from \"../../utils/validation/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../common/FormControls/FormControls.module.css'\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <div style={{textAlign: \"center\"}}>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {createField(\"Email\", 'email', [required], Input)}\r\n                {createField(\"Password\", 'password', [required], Input, {type: 'password'})}\r\n                {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, \"remember me\")}\r\n            </div>\r\n            {error && <div className={styles.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1 style={{textAlign: \"center\"}}>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React, {Suspense} from \"react\";\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n    return (props) => {\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}\r\n","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderComponent from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (<div className='app-wrapper'>\r\n                <HeaderComponent/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path={'/dialogs'}\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path={'/profile/:userId?'} render={() => <ProfileContainer/>}/>\r\n                    <Route path={'/users'}\r\n                           render={withSuspense(UsersContainer)}/>\r\n                    <Route path={'/login'} render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux-store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\n// let rerenderEntireTree = () => {\r\n    ReactDOM.render(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            < Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </BrowserRouter>, document.getElementById('root'));\r\n// }\r\n//\r\n// rerenderEntireTree()\r\n//\r\n// store.subscribe(() => {\r\n//     rerenderEntireTree()\r\n// })\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"," export const required = value => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\n export const maxLengthCreator = (maxLength) => value => {\r\n     if (value && value.length > maxLength) return `Mal length is ${maxLength} symbols`\r\n     return undefined\r\n }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__rHetS\",\"error\":\"FormControls_error__1lukK\",\"formSummaryError\":\"FormControls_formSummaryError__3ToBJ\"};","export default __webpack_public_path__ + \"static/media/Spinner-5.e9202c75.gif\";","import React from \"react\";\r\nimport spiner from '../../../img/Spinner-5.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={spiner} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsDesc\":\"Myposts_myPostsDesc__2hCnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1opt0\",\"loginBlock\":\"Header_loginBlock__16cZW\"};"],"sourceRoot":""}