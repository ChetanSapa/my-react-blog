{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","id","src","ava","alt","to","name","Message","message","val","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogElements","dialogData","map","d","messageElements","messages","m","isAuth","dialogs","dialogsItems","addmsg","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,sGCetOC,EAZI,SAACC,GAIhB,OACI,sBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACI,qBAAKH,UAAWD,EAAMK,GAAIC,IAAKN,EAAMO,IAAKC,IAAI,KAC9C,cAAC,IAAD,CAASC,GALN,YAKiBT,EAAMK,GAA1B,SAA+BL,EAAMU,WCClCC,EARC,SAACX,GACb,OACI,sBAAKC,UAAWC,IAAEU,QAAlB,UACI,gCAAMZ,EAAMK,GAAZ,OADJ,IAC2B,+BAAOL,EAAMa,U,yCCiC1CC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAfL,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWC,IACXb,KAAK,iBACLc,YAAY,qBACZC,SAAU,CAACC,IAAUZ,OAE7B,8BAAK,0DAOFa,EAjDC,SAAC3B,GAEb,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAiBF,EAAMG,WAAWC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBH,IAAK0B,EAAE1B,IAAKF,GAAI4B,EAAE5B,IAAxB4B,EAAE5B,OAC5E6B,EAAkBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS/B,GAAI+B,EAAE/B,GAAIQ,IAAKuB,EAAExB,SAAcwB,EAAE/B,OAMxF,OAAIL,EAAMqC,OAGN,sBAAKpC,UAAWC,IAAEoC,QAAlB,UACI,qBAAKrC,UAAWC,IAAEqC,aAAlB,SACKT,IAEL,sBAAK7B,UAAWC,IAAEiC,SAAlB,UACI,8BAAMD,IACN,qBAAKjC,UAAWC,IAAEsC,OAAlB,SACI,cAACxB,EAAD,CAAqBG,SAdjB,SAACsB,GACjBzC,EAAM0C,YAAYD,EAAOE,2BAGJ,cAAC,IAAD,CAAUlC,GAAI,Y,+CCjBvCmC,EAA6B,SAAChB,GAAD,MAAY,CACzCS,OAAQT,EAAMiB,KAAKR,S,OCgBRS,sBAAQC,aAdD,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACmB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAkBN,UDRP,SAACO,GAAe,IACtCC,EADqC,uKAGnC,OAAyB,IAAtBC,KAAKpD,MAAMqC,OAAyB,cAAC,IAAD,CAAU5B,GAAI,WAC9C,cAACyC,EAAD,eAAeE,KAAKpD,YAJQ,GACXqD,IAAMH,WAUtC,OAHqCH,YAAQH,EAARG,CAAoCI,KCK9DL,CAAwEnB","file":"static/js/4.b0629893.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__33uKM\",\"dialogsItems\":\"Dialogs_dialogsItems__1Coe_\",\"active\":\"Dialogs_active__276jx\",\"dialog\":\"Dialogs_dialog__7E8Wr\",\"messages\":\"Dialogs_messages__LRHpn\",\"message\":\"Dialogs_message__35f80\",\"addmsg\":\"Dialogs_addmsg__1Mql_\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\"\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img className={props.id} src={props.ava} alt=\"\"/>\r\n            <NavLink to={path + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div>{props.id} </div> <span>{props.val}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport s from './Dialogs.module.css';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validation/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogElements = state.dialogData.map(d => <DialogItem name={d.name} key={d.id} ava={d.ava} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message id={m.id} val={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <div className={s.addmsg}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n//create Form with redux-form\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name='newMessageBody'\r\n                    placeholder='Enter your message'\r\n                    validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div><button>Send message</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'AddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(this.props.isAuth === false) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n","import React from 'react';\r\nimport {addMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n"],"sourceRoot":""}